name: Use GitHub App Token
on:
  push:

jobs:
  build_test_and_release:
    name: Build, Test, & Release
    strategy:
      matrix:
        node-version: [ 16.x ]
    outputs:
      app_token: ${{ steps.get_app_token.outputs.app_token }}
    runs-on: sfdc-hk-ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: "**/package-lock.json"
      - name: Install dependencies
        run: npm ci
      - name: Run unit tests
        run: npm run test
      - name: Generate app token
        id: get_app_token
        uses: ./
        with:
          app_id: ${{ secrets.HEROKU_STANDARDS_APP_ID }}
          private_key: ${{ secrets.HEROKU_STANDARDS_APP_PRIVATE_KEY }}
      - name: Generated token
        run: |
          echo "Generated token: ${{ steps.get_app_token.outputs.app_token }}"
      - name: Rebuild dist
        run: npm run build
      - name: Compare with previous release
        id: diff
        run: |
          git add dist
          if git diff-index --quiet HEAD dist; then
            echo "  üëç No binary changes to push!"
            exit 0
          fi
          file_changes="$(git status --porcelain --untracked-files=no bin)"
          commit_message="$(printf 'Continuous Integration Build Artifacts\n\n%s', "${file_changes}")"
          echo "${file_changes}" | sed 's/^/  /'
          git config user.name "Continuous Integration"
          git config user.email 'heroku-production-services@salesforce.com'
          git commit -a -m "${commit_message}"
          git push
